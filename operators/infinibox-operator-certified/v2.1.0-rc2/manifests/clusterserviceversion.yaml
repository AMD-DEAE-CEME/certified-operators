# Test using https://operatorhub.io/preview
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "ibox0000",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-pool-admin-passwd",
              "username": "my-pool-admin"
            },
            "allowXfsUuidRegeneration": "yes",
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.0-rc2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher:v3.3.0",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "docker.io/infinidat/infinidat-csi-driver:v2.1.0-rc2",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner:v2.2.2",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar:v1.3.0",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer:v1.3.0",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter:v4.0.0",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ]
    capabilities: "Basic Install"
    categories: "Storage"
    description: CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.
    containerImage: registry.connect.redhat.com/infinidat/infinibox-operator-certified:2.1.0-rc2
    createdAt: 2021-07-19T10:20:01Z
    support: Infinidat
    certified: "true"
    repository: https://github.com/Infinidat/infinibox-csi-driver
  name: infinibox-operator.v2.1.0-rc2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    # Changes two owned list may need to be
    # replicated in hack-files/inject-crds.yaml.
    # See hack-bundle-csv recipe.
    owned:
    - kind: InfiniboxCsiDriver
      name: infiniboxcsidrivers.helm.infinidat.com
      version: v1alpha1
    - kind: VolumeSnapshotClass
      name: volumesnapshotclasses.snapshot.storage.k8s.io
      version: v1
    - kind: VolumeSnapshotClass
      name: volumesnapshotclasses.snapshot.storage.k8s.io
      version: v1beta1
    - kind: VolumeSnapshot
      name: volumesnapshots.snapshot.storage.k8s.io
      version: v1
    - kind: VolumeSnapshot
      name: volumesnapshots.snapshot.storage.k8s.io
      version: v1beta1
    - kind: VolumeSnapshotContent
      name: volumesnapshotclasses.snapshot.storage.k8s.io
      version: v1
    - kind: VolumeSnapshotContent
      name: volumesnapshotclasses.snapshot.storage.k8s.io
      version: v1beta1
  description: |
    Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.
     
    ## Features and Benefits
      
    * **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, NFS, and NFS TreeQs, with all Kubernetes PV access modes
    * **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  
    * **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver
      
    ## Required Parameters
      
    * `hostname` - IP address or hostname of the InfiniBox management interface
    * `username` / `password` - InfiniBox credentials
    * `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes

    ## Optional Parameters
    * `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication
  displayName: InfiniBox CSI Driver - Operator
  icon:
    - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcKICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICB4bWxuczpjYz0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjIgogICB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiCiAgIHhtbG5zOnN2Zz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgaW5rc2NhcGU6dmVyc2lvbj0iMS4wICg0MDM1YTRmLCAyMDIwLTA1LTAxKSIKICAgc29kaXBvZGk6ZG9jbmFtZT0iSW5maW5pZGF0LUxvZ28tU29saWQgdGVzdC5zdmciCiAgIGlkPSJzdmcxNSIKICAgdmVyc2lvbj0iMS4yIgogICB2aWV3Qm94PSIwIDAgNjAuMDAwMDA2IDMwIgogICBoZWlnaHQ9IjQwIgogICB3aWR0aD0iODAiPgogIDxtZXRhZGF0YQogICAgIGlkPSJtZXRhZGF0YTIxIj4KICAgIDxyZGY6UkRGPgogICAgICA8Y2M6V29yawogICAgICAgICByZGY6YWJvdXQ9IiI+CiAgICAgICAgPGRjOmZvcm1hdD5pbWFnZS9zdmcreG1sPC9kYzpmb3JtYXQ+CiAgICAgICAgPGRjOnR5cGUKICAgICAgICAgICByZGY6cmVzb3VyY2U9Imh0dHA6Ly9wdXJsLm9yZy9kYy9kY21pdHlwZS9TdGlsbEltYWdlIiAvPgogICAgICAgIDxkYzp0aXRsZT48L2RjOnRpdGxlPgogICAgICA8L2NjOldvcms+CiAgICA8L3JkZjpSREY+CiAgPC9tZXRhZGF0YT4KICA8ZGVmcwogICAgIGlkPSJkZWZzMTkiIC8+CiAgPHNvZGlwb2RpOm5hbWVkdmlldwogICAgIHVuaXRzPSJweCIKICAgICBpbmtzY2FwZTpwYWdlY2hlY2tlcmJvYXJkPSJmYWxzZSIKICAgICBpbmtzY2FwZTpjdXJyZW50LWxheWVyPSJzdmcxNSIKICAgICBpbmtzY2FwZTp3aW5kb3ctbWF4aW1pemVkPSIxIgogICAgIGlua3NjYXBlOndpbmRvdy15PSIyMyIKICAgICBpbmtzY2FwZTp3aW5kb3cteD0iMCIKICAgICBpbmtzY2FwZTpjeT0iMjAiCiAgICAgaW5rc2NhcGU6Y3g9IjM4LjQ0Mjk1MyIKICAgICBpbmtzY2FwZTp6b29tPSIxOC42MjUiCiAgICAgc2hvd2dyaWQ9ImZhbHNlIgogICAgIGlkPSJuYW1lZHZpZXcxNyIKICAgICBpbmtzY2FwZTp3aW5kb3ctaGVpZ2h0PSIxMDM1IgogICAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMTkyMCIKICAgICBpbmtzY2FwZTpwYWdlc2hhZG93PSIyIgogICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwIgogICAgIGd1aWRldG9sZXJhbmNlPSIxMCIKICAgICBncmlkdG9sZXJhbmNlPSIxMCIKICAgICBvYmplY3R0b2xlcmFuY2U9IjEwIgogICAgIGJvcmRlcm9wYWNpdHk9IjEiCiAgICAgYm9yZGVyY29sb3I9IiM2NjY2NjYiCiAgICAgcGFnZWNvbG9yPSIjZmZmZmZmIiAvPgogIDxnCiAgICAgdHJhbnNmb3JtPSJtYXRyaXgoMC4wMzI1OTExOSwwLDAsMC4wMzI1OTExOSwwLDkuMjgyNjY1OCkiCiAgICAgaWQ9InN1cmZhY2UyNzk1Ij4KICAgIDxwYXRoCiAgICAgICBpZD0icGF0aDEwIgogICAgICAgZD0iTSAxODQwLjk4ODMsMzUwLjg1MTU2IEggMCBWIDAgaCAxODQwLjk4ODMgdiAzNTAuODUxNTYiCiAgICAgICBzdHlsZT0iZmlsbDojMmI3ZDgyO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lIiAvPgogICAgPHBhdGgKICAgICAgIGlkPSJwYXRoMTIiCiAgICAgICBkPSJtIDE1My42NTYyNSw5OS4zNDM3NSBoIC0yNS42OTE0MSB2IDE2MC4wMTk1MyBoIDI1LjY5MTQxIHogbSAxMDMuOTQ1MzEsMTYwLjAxOTUzIHYgLTk0LjI2NTYyIGMgMCwtMTMuODM5ODUgLTAuNjAxNTYsLTI1LjUzMTI1IC0xLjgwMDc4LC0zNS4wMzkwNyAyLjE4NzUsMy45Mzc1IDQuODc1LDcuNTQyOTcgOC4wNzAzMSwxMC44NTE1NyAwLjU4MjAzLDAuNjIxMDkgMy4wNzgxMywyLjk5NjA5IDcuNDUzMTMsNy4xMzY3MSBsIDExOC41NzgxMiwxMTEuMzE2NDEgaCAxNC4zNDM3NSBWIDk5LjM0Mzc1IGggLTIzLjkwNjI1IHYgODcuNzU3ODEgYyAwLDE2LjMzOTg1IDAuNzk2ODgsMjkuNDgwNDcgMi40MTc5NywzOS4zODI4MSAtNi4xNjAxNSwtOC4yNSAtMTIuMDQ2ODcsLTE0Ljk4NDM3IC0xNy42MjEwOSwtMjAuMTQ0NTMgTCAyNDkuODE2NDEsOTkuMzQzNzUgaCAtMTYuMTI1IHYgMTYwLjAxOTUzIHogbSAyNTIuMDY2NDEsMCB2IC02NC41IGggNjguOTk2MDkgViAxNzMuNDcyNjYgSCA1MDkuNjY3OTcgViAxMjEuMDY2NDEgSCA2MzAuNjIxMDkgViA5OS4zNDM3NSBIIDQ4My45NzI2NiBWIDI1OS4zNjMyOCBaIE0gNjk5LjkxNDA2LDk5LjM0Mzc1IGggLTI1LjY5MTQgdiAxNjAuMDE5NTMgaCAyNS42OTE0IHogbSAxMDMuOTIxODgsMTYwLjAxOTUzIHYgLTk0LjI2NTYyIGMgMCwtMTMuODM5ODUgLTAuNTgyMDMsLTI1LjUzMTI1IC0xLjc3NzM1LC0zNS4wMzkwNyAyLjE4MzYsMy45Mzc1IDQuODc1LDcuNTQyOTcgOC4wNzAzMiwxMC44NTE1NyAwLjU4MjAzLDAuNjIxMDkgMy4wNzgxMiwyLjk5NjA5IDcuNDUzMTIsNy4xMzY3MSBsIDExOC41NzQyMiwxMTEuMzE2NDEgaCAxNC4zMzU5NCBWIDk5LjM0Mzc1IGggLTIzLjg5NDUzIHYgODcuNzU3ODEgYyAwLDE2LjMzOTg1IDAuNzk2ODcsMjkuNDgwNDcgMi40MTQwNiwzOS4zODI4MSAtNi4xNzE4OCwtOC4yNSAtMTIuMDM5MDYsLTE0Ljk4NDM3IC0xNy42MTcxOSwtMjAuMTQ0NTMgTCA3OTYuMDc0MjIsOTkuMzQzNzUgSCA3NzkuOTQ1MzEgViAyNTkuMzYzMjggWiBNIDEwNTUuOTE4LDk5LjM0Mzc1IGggLTI1LjY5MTQgdiAxNjAuMDE5NTMgaCAyNS42OTE0IHogbSA4MC4wMzksMCB2IDE2MC4wMTk1MyBoIDg0LjgxNjQgYyAyNy4yOTMsMCA0Ni45ODQ0LC00LjE0MDYyIDU5LjE0NDYsLTEyLjQwMjM0IDIxLjMxMjUsLTE0LjQ5MjE5IDMxLjk2MDksLTM3LjMwODYgMzEuOTYwOSwtNjguNTQ2ODggMCwtMTQuMjY1NjIgLTIuODM1OSwtMjcuMjUzOSAtOC41MTE3LC0zOS4wNTQ2OSAtNS42NzE5LC0xMS43ODkwNiAtMTMuNSwtMjAuOTc2NTYgLTIzLjQ0OTIsLTI3LjYxNzE4IC0xMi4zNDc3LC04LjI1MzkxIC0zMi4wNDMsLTEyLjM5ODQ0IC01OS4xNDQ2LC0xMi4zOTg0NCB6IG0gMTMyLjU5NzcsMzMuODQzNzUgYyAxMS4zNjMzLDguOTIxODcgMTcuMDM1MSwyMy45Mjk2OSAxNy4wMzUxLDQ1LjA4NTk0IDAsMjEuOTUzMTIgLTUuNjcxOCwzNy40MDIzNCAtMTcuMDM1MSw0Ni4zMjgxMiAtMTAuMzYzMyw4LjI5Mjk3IC0yNy40NjA5LDEyLjQyOTY5IC01MS4zNjcyLDEyLjQyOTY5IGggLTU1LjUzNTIgViAxMjAuNzQ2MDkgaCA1NS41MzUyIGMgMjMuNzAzMSwwIDQwLjgxNjQsNC4xNjQwNyA1MS4zNjcyLDEyLjQ0MTQxIG0gMTAzLjk2MDksMTI2LjE3NTc4IDE5LjY5MTQsLTM5LjM5NDUzIGggMTA0LjI0NjEgbCAxOS42OTUzLDM5LjM5NDUzIGggMjguNDAyNCBMIDE0NTguNzkzLDk5LjM0Mzc1IGggLTI3LjQ1MzIgbCAtODQuMjIyNiwxNjAuMDE5NTMgeiBNIDE0NDQuNDk2MSwxMTcuNjQwNjMgMTQ4NiwxOTkuNTI3MzQgaCAtODMuMDMxMiB6IG0gMjgwLjQxOCwzLjQyNTc4IFYgOTkuMzQzNzUgaCAtMTY2LjkzMzYgdiAyMS43MjI2NiBoIDcwLjQ2NDggdiAxMzguMjk2ODcgaCAyNS42ODM2IFYgMTIxLjA2NjQxIGggNzAuNzg1MiIKICAgICAgIHN0eWxlPSJmaWxsOiNmZmZmZmY7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOm5vbmUiIC8+CiAgPC9nPgo8L3N2Zz4K
      mediatype: "image/svg+xml"
  install:
    spec:
      deployments:
      - name: infinibox-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: infinibox-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: infinibox-operator
            spec:
              containers:
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: infinibox-operator
                image: registry.connect.redhat.com/infinidat/infinibox-operator:2.1.0-rc2
                imagePullPolicy: Always
                name: infinibox-operator
                resources: {}
              serviceAccountName: infinibox-operator-controller
      strategy: deployment
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - infinibox
    - infinidat
    - storage
    - san
    - nas
    - csi
  maintainers:
    - email: info@infinidat.com
      name: Infinidat
  maturity: alpha
  links:
    - name: Infinidat
      url: https://infinidat.com
  provider:
    name: Infinidat
    url: https://infinidat.com
  version: 2.1.0-rc2

